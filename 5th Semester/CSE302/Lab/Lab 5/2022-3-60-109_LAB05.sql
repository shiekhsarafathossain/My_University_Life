SELECT c.* 
FROM CUSTOMER c
WHERE  CUSTOMER_NAME IN (SELECT c.CUSTOMER_NAME
                     FROM BRANCH b,ACCOUNT a,DEPOSITOR d,CUSTOMER c
                     WHERE b.BRANCH_NAME=a.BRANCH_NAME AND
                     a.ACCOUNT_NUMBER=d.ACCOUNT_NUMBER AND 
                     d.CUSTOMER_NAME=c.CUSTOMER_NAME AND 
                     b.BRANCH_CITY=c.CUSTOMER_CITY); -- 1 (SUB Q)

SELECT c.* 
FROM BRANCH b,ACCOUNT a,DEPOSITOR d,CUSTOMER c
WHERE b.BRANCH_NAME=a.BRANCH_NAME AND
a.ACCOUNT_NUMBER=d.ACCOUNT_NUMBER AND 
d.CUSTOMER_NAME=c.CUSTOMER_NAME AND 
b.BRANCH_CITY=c.CUSTOMER_CITY; -- 1 (Without SUB Q)


SELECT c.*
FROM CUSTOMER c
WHERE C.CUSTOMER_NAME IN (SELECT c.CUSTOMER_NAME
                      FROM CUSTOMER c, BORROWER b, LOAN l, BRANCH b
                      WHERE c.CUSTOMER_NAME = b.CUSTOMER_NAME AND
                      b.LOAN_NUMBER = l.LOAN_NUMBER AND
                      l.BRANCH_NAME = b.BRANCH_NAME AND
                      c.CUSTOMER_CITY = b.BRANCH_CITY); -- 2 (SUB Q)

SELECT c.*
FROM CUSTOMER c, BORROWER b, LOAN l, BRANCH b
WHERE c.CUSTOMER_NAME = b.CUSTOMER_NAME AND
b.LOAN_NUMBER = l.LOAN_NUMBER AND
l.BRANCH_NAME = b.BRANCH_NAME AND
c.CUSTOMER_CITY = b.BRANCH_CITY; -- 2 (Without SUB Q)


SELECT b.BRANCH_CITY, AVG(BALANCE) AS AVERAGE_BALANCE
FROM ACCOUNT a, BRANCH b
WHERE a.BRANCH_NAME = b.BRANCH_NAME
GROUP BY(b.BRANCH_CITY)
HAVING SUM(BALANCE) >= 1000; -- 3 (WITH HAVING)

SELECT b.BRANCH_CITY, AVG(BALANCE)AS AVERAGE_BALANCE
FROM ACCOUNT a, BRANCH b
WHERE a.BRANCH_NAME = b.BRANCH_NAME
GROUP BY b.BRANCH_CITY
HAVING b.BRANCH_CITY IN (
    SELECT b.BRANCH_CITY
    FROM ACCOUNT a, BRANCH b
    WHERE a.BRANCH_NAME = b.BRANCH_NAME
    GROUP BY b.BRANCH_CITY
    HAVING SUM(a.BALANCE) > 1000 ); -- 3 (WITHOUT HAVING DIRECTLY)


SELECT b.BRANCH_CITY, AVG(AMOUNT) AS AVERAGE_BALANCE
FROM LOAN l, BRANCH b
WHERE l.BRANCH_NAME = b.BRANCH_NAME
GROUP BY(b.BRANCH_CITY)
HAVING SUM(AMOUNT) > 1500; -- 4 (WITH HAVING)

SELECT b.BRANCH_CITY, AVG(AMOUNT)AS AVERAGE_BALANCE
FROM LOAN l, BRANCH b
WHERE l.BRANCH_NAME = b.BRANCH_NAME
GROUP BY b.BRANCH_CITY
HAVING b.BRANCH_CITY IN (
    SELECT b.BRANCH_CITY
    FROM LOAN l, BRANCH b
    WHERE l.BRANCH_NAME = b.BRANCH_NAME
    GROUP BY b.BRANCH_CITY
    HAVING SUM(l.AMOUNT) > 1500 ); -- 4 (WITHOUT HAVING DIRECTLY)


SELECT c.*
FROM CUSTOMER c, DEPOSITOR d, ACCOUNT a
WHERE c.CUSTOMER_NAME = d.CUSTOMER_NAME AND
d.ACCOUNT_NUMBER = a.ACCOUNT_NUMBER AND
a.BALANCE = ALL (
    SELECT MAX(BALANCE)
    FROM ACCOUNT
    ); -- 5 (WITH ALL)

SELECT c.*
FROM CUSTOMER c, DEPOSITOR d, ACCOUNT a
WHERE c.CUSTOMER_NAME = d.CUSTOMER_NAME AND
d.ACCOUNT_NUMBER = a.ACCOUNT_NUMBER AND
a.BALANCE = (
    SELECT MAX(BALANCE)
    FROM ACCOUNT
    ); -- 5 (WITHOUT ALL)
    
    
SELECT c.*
FROM CUSTOMER c, BORROWER b, LOAN l
WHERE c.CUSTOMER_NAME = b.CUSTOMER_NAME AND
b.LOAN_NUMBER = l.LOAN_NUMBER AND
l.AMOUNT = ALL (
    SELECT MIN(AMOUNT)
    FROM LOAN
    ); -- 6 (WITH ALL)

SELECT c.*
FROM CUSTOMER c, BORROWER b, LOAN l
WHERE c.CUSTOMER_NAME = b.CUSTOMER_NAME AND
b.LOAN_NUMBER = l.LOAN_NUMBER AND
l.AMOUNT = (
    SELECT MIN(AMOUNT)
    FROM LOAN
    ); -- 6 (WITHOUT ALL)
    
SELECT BRANCH_NAME, BRANCH_CITY
FROM BRANCH b
WHERE BRANCH_NAME IN (
    SELECT DISTINCT BRANCH_NAME
    FROM ACCOUNT
) AND BRANCH_NAME IN (
    SELECT DISTINCT BRANCH_NAME
    FROM LOAN
); -- 7 (USING IN)

SELECT BRANCH_NAME, BRANCH_CITY
FROM BRANCH b
WHERE EXISTS (
    SELECT *
    FROM ACCOUNT a
    WHERE a.BRANCH_NAME = b.BRANCH_NAME
) AND EXISTS (
    SELECT *
    FROM LOAN l
    WHERE l.BRANCH_NAME = b.BRANCH_NAME
); -- 7 (USING EXISTS)


SELECT CUSTOMER_NAME, CUSTOMER_CITY
FROM CUSTOMER
WHERE CUSTOMER_NAME IN (
    SELECT CUSTOMER_NAME
    FROM DEPOSITOR
    WHERE ACCOUNT_NUMBER IN (
        SELECT ACCOUNT_NUMBER
        FROM ACCOUNT
    )
) AND CUSTOMER_NAME NOT IN (
    SELECT CUSTOMER_NAME
    FROM BORROWER
); -- 8 (USING NOT IN)

SELECT CUSTOMER_NAME, CUSTOMER_CITY
FROM CUSTOMER c
WHERE EXISTS (
    SELECT *
    FROM depositor d
    WHERE d.CUSTOMER_NAME = c.CUSTOMER_NAME
    AND d.ACCOUNT_NUMBER IN (
        SELECT ACCOUNT_NUMBER
        FROM ACCOUNT
    )
) AND NOT EXISTS (
    SELECT *
    FROM BORROWER b
    WHERE b.CUSTOMER_NAME = c.CUSTOMER_NAME
); -- 8 (USING NOT EXISTS)


WITH branch_balance AS (
    SELECT branch_name, SUM(balance) AS total_balance
    FROM account
    GROUP BY branch_name
)
SELECT branch_name
FROM branch_balance
WHERE total_balance > (SELECT AVG(total_balance) FROM branch_balance); -- 9 (WITH WITH CLAUSE)

SELECT branch_name
FROM (
    SELECT branch_name, SUM(balance) AS total_balance
    FROM account
    GROUP BY branch_name
) branch_balance
WHERE total_balance > (SELECT AVG(total_balance) FROM (
    SELECT branch_name, SUM(balance) AS total_balance
    FROM account
    GROUP BY branch_name
)); -- 9 (WITHOUT WITH CLAUSE)


WITH branch_loan_balance AS (
    SELECT branch_name, SUM(amount) AS total_loan_amount
    FROM loan
    GROUP BY branch_name
)
SELECT branch_name
FROM branch_loan_balance
WHERE total_loan_amount < (SELECT AVG(total_loan_amount) FROM branch_loan_balance); -- 10 (WITH WITH CLAUSE)

SELECT branch_name
FROM (
    SELECT branch_name, SUM(amount) AS total_loan_amount
    FROM loan
    GROUP BY branch_name
) branch_loan_balance
WHERE total_loan_amount < (SELECT AVG(total_loan_amount) FROM (
    SELECT branch_name, SUM(amount) AS total_loan_amount
    FROM loan
    GROUP BY branch_name
)); -- 10 (WITHOUT WITH CLAUSE)


